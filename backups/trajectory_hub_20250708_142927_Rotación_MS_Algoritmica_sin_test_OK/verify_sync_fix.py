# === verify_sync_fix.py ===
# üîç Verificar: Si el fix de sincronizaci√≥n se aplic√≥ correctamente
# ‚ö° Debug del problema persistente

import os

def verify_sync_fix():
    """Verificar si la sincronizaci√≥n est√° en el lugar correcto"""
    
    file_path = os.path.join("trajectory_hub", "core", "enhanced_trajectory_engine.py")
    
    with open(file_path, 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    print("üîç Buscando sincronizaci√≥n de state.position...")
    
    # Buscar el procesamiento de deltas
    in_delta_section = False
    sync_found = False
    sync_position = "unknown"
    
    for i, line in enumerate(lines):
        # Detectar inicio de secci√≥n de deltas
        if '# üîß PROCESAMIENTO DE DELTAS' in line:
            in_delta_section = True
            print(f"\n‚úÖ Secci√≥n de deltas encontrada en l√≠nea {i+1}")
            print("\nüìã Contenido de la secci√≥n:")
            continue
        
        # Detectar fin de secci√≥n
        if '# FIN PROCESAMIENTO DE DELTAS' in line:
            in_delta_section = False
            print(f"\nüìç Fin de secci√≥n en l√≠nea {i+1}")
            break
        
        # Mostrar contenido de la secci√≥n
        if in_delta_section:
            print(f"{i+1:4d}: {line.rstrip()}")
            
            # Buscar la sincronizaci√≥n
            if 'motion.state.position = self._positions[source_id].copy()' in line:
                sync_found = True
                # Ver si est√° dentro del loop
                if 'for source_id, motion' in lines[i-1] or 'for source_id, motion' in lines[i-2]:
                    sync_position = "AL INICIO del loop ‚úÖ"
                else:
                    sync_position = "FUERA o AL FINAL del loop ‚ùå"
                print(f"\n‚ö†Ô∏è SINCRONIZACI√ìN en l√≠nea {i+1}: {sync_position}")
    
    print("\nüìä AN√ÅLISIS:")
    print(f"  Sincronizaci√≥n encontrada: {'‚úÖ S√ç' if sync_found else '‚ùå NO'}")
    print(f"  Posici√≥n: {sync_position}")
    
    if sync_position == "FUERA o AL FINAL del loop ‚ùå":
        print("\n‚ùå La sincronizaci√≥n NO est√° en el lugar correcto")
        print("   Debe estar DENTRO del loop y AL PRINCIPIO")
        return False
    
    # Verificar tambi√©n que update_with_deltas se llame
    print("\nüîç Verificando llamada a update_with_deltas...")
    for i, line in enumerate(lines):
        if in_delta_section and 'update_with_deltas' in line:
            print(f"  ‚úÖ update_with_deltas llamado en l√≠nea {i+1}")
    
    return sync_found and "AL INICIO" in sync_position

if __name__ == "__main__":
    print("üîß Verificando fix de sincronizaci√≥n...")
    
    if verify_sync_fix():
        print("\n‚úÖ El fix est√° aplicado correctamente")
        print("\nüîç El problema debe estar en otro lugar")
        print("   Posiblemente:")
        print("   1. El loop no se est√° ejecutando")
        print("   2. Los deltas no se est√°n aplicando")
        print("   3. Hay otro c√≥digo que sobrescribe las posiciones")
    else:
        print("\n‚ùå El fix NO se aplic√≥ correctamente")
        print("   Necesitamos aplicarlo manualmente")