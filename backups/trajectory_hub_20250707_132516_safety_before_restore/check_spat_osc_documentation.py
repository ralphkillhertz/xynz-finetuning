#!/usr/bin/env python3
from pythonosc import udp_client
import time

print("üîç VERIFICANDO FORMATO OSC SEG√öN DOCUMENTACI√ìN SPAT\n")

client = udp_client.SimpleUDPClient("127.0.0.1", 9000)

# Seg√∫n la documentaci√≥n, algunos comandos requieren inicializaci√≥n
print("1. PROBANDO COMANDOS DE INICIALIZACI√ìN:")

# Posible necesidad de definir n√∫mero de fuentes primero
print("   /source/count [10]")
client.send_message("/source/count", [10])
time.sleep(0.5)

# O tal vez
print("   /spat/source/count [10]")
client.send_message("/spat/source/count", [10])
time.sleep(0.5)

print("\n2. PROBANDO CREAR GRUPO CON DIFERENTES SINTAXIS:")

# Formato con ID num√©rico
print("   /group/1/name ['Grupo1']")
client.send_message("/group/1/name", ["Grupo1"])
time.sleep(0.5)

# Formato con create
print("   /group/create ['Grupo2']")
client.send_message("/group/create", ["Grupo2"])
time.sleep(0.5)

# Formato con define
print("   /group/define [1, 'Grupo3']")
client.send_message("/group/define", [1, "Grupo3"])
time.sleep(0.5)

print("\n3. ASIGNACI√ìN DIRECTA SIN CREAR:")
# Tal vez Spat crea grupos autom√°ticamente al asignar
print("   /source/1/group ['AutoGrupo']")
client.send_message("/source/1/group", ["AutoGrupo"])
time.sleep(0.5)

print("\n4. FORMATO DE LISTA DE FUENTES:")
# Algunos sistemas requieren definir el grupo con sus fuentes
print("   /group/set ['ListaGrupo', 1, 2, 3]")
client.send_message("/group/set", ["ListaGrupo", 1, 2, 3])

print("\n‚úÖ REVISA EN SPAT:")
print("   - ¬øAlg√∫n grupo se cre√≥?")
print("   - ¬øQu√© mensajes se reconocen?")
print("\nüí° ALTERNATIVA:")
print("   Si nada funciona, crea los grupos manualmente en Spat")
print("   y usa solo /source/X/group para asignar fuentes")
