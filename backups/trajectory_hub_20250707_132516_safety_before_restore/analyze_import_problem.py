#!/usr/bin/env python3
"""
üîç AN√ÅLISIS DETALLADO DEL PROBLEMA DE IMPORTS
"""

import os

print("""
================================================================================
üîç AN√ÅLISIS DETALLADO DEL PROBLEMA
================================================================================
Vamos a examinar exactamente qu√© hay en el archivo
================================================================================
""")

engine_file = "trajectory_hub/core/enhanced_trajectory_engine.py"

# 1. Leer y mostrar las l√≠neas problem√°ticas
print("üìã CONTENIDO ACTUAL (l√≠neas 10-35):")
print("=" * 70)

try:
    with open(engine_file, 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    for i in range(9, min(35, len(lines))):
        # Marcar la l√≠nea problem√°tica
        marker = ">>>" if i == 19 else "   "
        # Mostrar espacios y tabs claramente
        line_display = lines[i].replace('\t', '‚Üí   ').rstrip()
        print(f"{marker} {i+1:3d}: {repr(lines[i].rstrip())}")
        
except Exception as e:
    print(f"‚ùå Error leyendo archivo: {e}")
    exit(1)

# 2. Analizar el problema espec√≠fico
print("\n" + "=" * 70)
print("üîç AN√ÅLISIS DEL PROBLEMA:")
print("=" * 70)

# Buscar patrones
has_from_statement = False
indented_imports = []
import_start = None

for i, line in enumerate(lines):
    # Buscar declaraciones from
    if line.strip().startswith('from trajectory_hub.core.motion_components'):
        has_from_statement = True
        import_start = i
        print(f"‚úì Encontrada declaraci√≥n 'from' en l√≠nea {i+1}")
        
    # Buscar l√≠neas con indentaci√≥n que parecen ser parte de imports
    if line.startswith('    ') and ',' in line and 'Trajectory' in line:
        indented_imports.append(i)

if not has_from_statement:
    print("‚ùå NO HAY declaraci√≥n 'from trajectory_hub.core.motion_components import ('")
    print("   Las l√≠neas con imports est√°n hu√©rfanas")

if indented_imports:
    print(f"\nüìç L√≠neas con indentaci√≥n que parecen imports: {[i+1 for i in indented_imports]}")

# 3. Diagn√≥stico
print("\n" + "=" * 70)
print("üí° DIAGN√ìSTICO:")
print("=" * 70)

print("""
El problema es que:
1. Las l√≠neas 20-23 tienen indentaci√≥n (4 espacios)
2. NO hay una declaraci√≥n 'from ... import (' antes
3. Por eso Python dice "unexpected indent"

Causa probable:
- Los scripts anteriores eliminaron la l√≠nea 'from ... import ('
- Pero dejaron las l√≠neas siguientes con su indentaci√≥n original
""")

# 4. Mostrar c√≥mo DEBER√çA verse
print("\n" + "=" * 70)
print("‚úÖ C√ìMO DEBER√çA VERSE:")
print("=" * 70)

correct_import = """# Importar el sistema de componentes
from trajectory_hub.core.motion_components import (
    SourceMotion, TrajectoryMovementMode, TrajectoryDisplacementMode,
    OrientationModulation, IndividualTrajectory, TrajectoryTransform,
    MacroTrajectory, create_complex_movement, MotionState,
    AdvancedOrientationModulation
)
from trajectory_hub.core.concentration_component import ConcentrationComponent"""

print(correct_import)

# 5. Proponer soluci√≥n
print("\n" + "=" * 70)
print("üõ†Ô∏è SOLUCI√ìN PROPUESTA:")
print("=" * 70)

print("""
Necesitamos:
1. A√±adir 'from trajectory_hub.core.motion_components import (' antes de l√≠nea 20
2. Asegurar que el par√©ntesis se cierre correctamente
3. Poner el import de ConcentrationComponent en su propia l√≠nea

¬øDeseas que cree un script para arreglar esto autom√°ticamente?
O prefieres hacerlo manualmente con las instrucciones claras.
""")

# 6. Crear script de arreglo definitivo
fix_script = '''#!/usr/bin/env python3
"""
‚úÖ ARREGLO DEFINITIVO Y SIMPLE
"""

import os

engine_file = "trajectory_hub/core/enhanced_trajectory_engine.py"

# Leer archivo
with open(engine_file, 'r') as f:
    lines = f.readlines()

# Buscar la l√≠nea con "# Importar el sistema de componentes"
import_comment_line = None
for i, line in enumerate(lines):
    if '# Importar el sistema de componentes' in line:
        import_comment_line = i
        break

if import_comment_line is not None:
    # Reemplazar desde ah√≠ hasta encontrar una l√≠nea que no empiece con espacios
    # y no sea parte del import
    
    new_lines = lines[:import_comment_line+1]
    
    # A√±adir el import correcto
    new_lines.append('from trajectory_hub.core.motion_components import (\\n')
    
    # Buscar las l√≠neas del import (con indentaci√≥n)
    i = import_comment_line + 1
    while i < len(lines):
        line = lines[i]
        # Si es una l√≠nea con indentaci√≥n y contiene nombres de clases
        if line.startswith('    ') and ('Motion' in line or 'Trajectory' in line or ')' in line):
            new_lines.append(line)
            if ')' in line:
                i += 1
                break
        elif line.strip() == '':
            pass  # Saltar l√≠neas vac√≠as
        else:
            break
        i += 1
    
    # A√±adir import de ConcentrationComponent
    new_lines.append('from trajectory_hub.core.concentration_component import ConcentrationComponent\\n')
    
    # A√±adir el resto del archivo
    # Buscar d√≥nde continuar (saltar imports mal formateados)
    while i < len(lines) and ('ConcentrationComponent' in lines[i] or lines[i].strip() == ''):
        i += 1
    
    new_lines.extend(lines[i:])
    
    # Guardar
    with open(engine_file, 'w') as f:
        f.writelines(new_lines)
    
    print("‚úÖ Archivo arreglado")
else:
    print("‚ùå No se encontr√≥ el comentario de imports")
'''

with open("definitive_fix.py", 'w') as f:
    f.write(fix_script)
os.chmod("definitive_fix.py", 0o755)

print("\n‚úÖ Script de arreglo creado: definitive_fix.py")