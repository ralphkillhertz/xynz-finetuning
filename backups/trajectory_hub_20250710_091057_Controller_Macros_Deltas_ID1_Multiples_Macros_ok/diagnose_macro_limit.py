# === diagnose_macro_limit.py ===
#!/usr/bin/env python3
"""
üîç Diagn√≥stico: ¬øPor qu√© solo 2 macros?
"""

def diagnose():
    print("üîç DIAGN√ìSTICO L√çMITE DE MACROS")
    print("=" * 50)
    
    # 1. Verificar configuraci√≥n
    print("\n1Ô∏è‚É£ Verificando config.py...")
    with open("trajectory_hub/config.py", 'r') as f:
        config_content = f.read()
        if "n_sources" in config_content:
            for line in config_content.split('\n'):
                if "n_sources" in line and not line.strip().startswith('#'):
                    print(f"   ‚Üí {line.strip()}")
    
    # 2. Verificar engine
    print("\n2Ô∏è‚É£ Verificando engine...")
    with open("trajectory_hub/core/enhanced_trajectory_engine.py", 'r') as f:
        engine_content = f.read()
        
    # Buscar l√≠mites
    print("\n3Ô∏è‚É£ Buscando l√≠mites de sources...")
    
    # Verificar inicializaci√≥n
    if "_active_sources" in engine_content:
        print("   ‚úÖ _active_sources encontrado")
        
    # Buscar ID generation
    for line in engine_content.split('\n'):
        if "source_id" in line and ("=" in line or "+" in line):
            print(f"   ID: {line.strip()[:80]}...")
    
    print("\n4Ô∏è‚É£ Teor√≠a del problema:")
    print("   - IDs de sources podr√≠an estar colisionando")
    print("   - L√≠mite hardcodeado en alg√∫n lugar")
    print("   - Sources anteriores no se liberan")
    
    # Quick fix suggestion
    print("\nüí° Soluci√≥n probable:")
    print("   Los IDs de las sources deben ser √∫nicos")
    print("   Verificar que cada macro use IDs diferentes")

if __name__ == "__main__":
    diagnose()