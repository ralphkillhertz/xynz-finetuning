# === fix_target_angle_bug.py ===
# üîß Corregir bug del √°ngulo target
# ‚ö° El valor no se est√° pasando correctamente

import re
import math

print("üîß INVESTIGANDO BUG DEL √ÅNGULO TARGET")
print("=" * 60)

# Verificar set_manual_individual_rotation
print("1Ô∏è‚É£ Buscando set_manual_individual_rotation en engine...")

try:
    with open('trajectory_hub/core/enhanced_trajectory_engine.py', 'r') as f:
        content = f.read()
    
    # Buscar el m√©todo
    method_match = re.search(
        r'def set_manual_individual_rotation.*?(?=\n    def|\Z)', 
        content, 
        re.DOTALL
    )
    
    if method_match:
        method = method_match.group(0)
        print("\nüìÑ M√©todo encontrado:")
        print("-" * 60)
        
        # Mostrar l√≠neas relevantes
        lines = method.split('\n')
        for i, line in enumerate(lines[:40]):  # Primeras 40 l√≠neas
            print(f"{i+1:3d}: {line}")
            
            # Buscar asignaciones sospechosas
            if 'target_yaw' in line and '=' in line:
                print("     ‚ö° ASIGNACI√ìN DE target_yaw")
            if 'interpolation_speed' in line and '=' in line:
                print("     ‚ö° ASIGNACI√ìN DE interpolation_speed")
                
        print("-" * 60)
        
        # Buscar posibles conversiones err√≥neas
        if 'math.radians' in method:
            print("\n‚ö†Ô∏è ENCONTRADO math.radians - posible conversi√≥n doble")
        if 'degrees' in method and 'target' in method:
            print("\n‚ö†Ô∏è Posible conversi√≥n grados/radianes")
            
    # Verificar el valor de math.pi/2
    print(f"\n2Ô∏è‚É£ Verificando valores:")
    print(f"   math.pi/2 = {math.pi/2:.6f} radianes")
    print(f"   math.pi/2 = {math.degrees(math.pi/2):.1f} grados")
    print(f"   0.0274 rad = {math.degrees(0.0274):.1f} grados")
    print(f"   1.6¬∞ = {math.radians(1.6):.6f} radianes")
    
    # Posible causa
    print("\n3Ô∏è‚É£ AN√ÅLISIS:")
    print("   El valor 0.0274 es muy cercano a math.radians(1.57)")
    print(f"   math.radians(1.57) = {math.radians(1.57):.6f}")
    print("   ¬°Parece que se est√° aplicando radians() a un valor ya en radianes!")
    
    # Buscar el problema espec√≠fico
    print("\n4Ô∏è‚É£ Buscando l√≠nea problem√°tica...")
    for i, line in enumerate(lines):
        if 'component.target_yaw' in line:
            print(f"\n   L√≠nea {i+1}: {line.strip()}")
            if 'radians' in line:
                print("   ‚ö†Ô∏è ¬°ENCONTRADO! Se est√° aplicando radians() incorrectamente")

except Exception as e:
    print(f"Error: {e}")

print("\n‚úÖ Diagn√≥stico completado")